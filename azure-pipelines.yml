trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: |
    docker --version
  displayName: 'Verify Docker'

- task: SSH@0
  inputs:
    sshEndpoint: 'DigitalOceanSSH'
    runOptions: 'inline'
    inline: |
      # Navigate to deployment directory
      echo "Navigating to /var/www/backend"
      cd "/var/www/backend" || (mkdir -p "/var/www/backend" && cd "/var/www/backend" && echo "Directory created")
      pwd

      # Clone or update repository
      if [ -d "TaskManager" ]; then
        echo "Moving to TaskManager"
        cd TaskManager
        git pull origin main || (echo "Git pull failed" && exit 1)
      else
        echo "Cloning project"
        git clone "https://github.com/MaldeFrank/TaskManager.git" || (echo "Git clone failed" && exit 1)
        cd TaskManager
      fi

      # Check for docker-compose.yml
      if [ ! -f "docker-compose.yml" ]; then
        echo "Error: docker-compose.yml not found"
        exit 1
      fi
      ls -l docker-compose.yml

      # Stop and remove existing containers
      echo "Stopping and removing existing containers"
      docker-compose down || echo "No containers to stop"

      # Remove old image dynamically
      echo "Removing old image"
      image_name=$(grep 'image:' docker-compose.yml | awk '{print $2}' | head -n 1)
      docker rmi "$image_name" 2>/dev/null || echo "No image to remove"

      # Start new containers
      echo "Starting new containers"
      docker-compose up -d || (echo "Failed to start containers" && exit 1)

      # Verify containers are running
      echo "Checking container status"
      sleep 5
      if ! docker ps | grep -q "Up"; then
        echo "Error: Containers failed to start"
        docker logs $(docker ps -a -q)
        exit 1
      fi
      docker ps -a
    failOnStdErr: false  # Prevents false error tagging
  displayName: 'Deploy to DigitalOcean with Docker'