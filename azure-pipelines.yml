trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: BackendSecrets 

steps:
- script: |
    docker --version
  displayName: 'Verify Docker'

- task: SSH@0
  inputs:
    sshEndpoint: 'DigitalOceanSSH'
    runOptions: 'inline'
    inline: |
      # Navigate to the deployment directory 
      echo "Navigating to /var/www/backend"
      cd /var/www/backend || (mkdir -p /var/www/backend && cd /var/www/backend && echo "Directory created")

      # Check current directory
      pwd

      # Pull the latest code from the repository
      echo "Pulling from Git repository"
      git pull origin main || (echo "Git pull failed, initializing repository" && git init && git remote add origin https://github.com/MaldeFrank/TaskManager.git && git pull origin main)

      #Go to project
      if[-d "TaskManager"]; then
      cd TaskManager
      git pull origin main
      else
      git clone https://github.com/MaldeFrank/TaskManager.git
      cd TaskManager

      # Check if docker-compose.yml exists
      ls -l docker-compose.yml || echo "docker-compose.yml not found"

      # Stop and remove the existing container (if it exists)
      echo "Stopping and removing existing containers"
      docker-compose down || echo "No containers to stop or error occurred"

      # Remove the last built image
      echo "Removing old image"
      docker rmi $(docker images -q clean-app-backend:latest) 2>/dev/null || echo "No image to remove or error occurred"

      # Bring up the application using docker-compose
      echo "Starting new containers"
      docker-compose up -d || echo "Failed to start containers"

      # Verify containers are running
      echo "Checking container status"
      docker ps -a
  displayName: 'Deploy to DigitalOcean with Docker'